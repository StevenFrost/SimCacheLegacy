<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".h" #>
/**********************************************************************************
 *                                                                                *
 * Copyright (c) 2016 Steven Frost, Orion Lyau. All rights reserved.              *
 *                                                                                *
 * This source is subject to the MIT License.                                     *
 * See http://opensource.org/licenses/MIT                                         *
 *                                                                                *
 * THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,    *
 * EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED          *
 * WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.         *
 *                                                                                *
 *               AUTOGENERATED FILE - DO NOT MANUALLY EDIT OR COMMIT              *
 *                                                                                *
 **********************************************************************************/
<#
string path = this.Host.ResolvePath("");
string locFilesPath = @"..\..\..\Resources\Localization\";
string[] stringFiles = Directory.GetFiles(Path.Combine(path, locFilesPath));
#>

#pragma once

#include <map>
#include <string>

namespace SimCache
{
namespace Localization
{

//-----------------------------------------------------------------------------

constexpr const char *LOCALES[] = {
<#
foreach (string file in stringFiles)
{
#>
    "<#=Path.GetFileNameWithoutExtension(file)#>"
<#
}
#>
};

//-----------------------------------------------------------------------------

std::map<const std::string, std::map<const std::string, const std::string>> STRING_TABLE {
<#
foreach (string file in stringFiles)
{
#>
    std::make_pair("<#=Path.GetFileNameWithoutExtension(file)#>",
        std::map<const std::string, const std::string>
        {
<#
string line;
System.IO.StreamReader sr = new System.IO.StreamReader(file);
while ((line = sr.ReadLine()) != null)
{
    string[] splitLine = line.Split(new char[] {'='}, 2);
#>
            std::make_pair("<#=splitLine[0]#>", "<#=splitLine[1]#>"),
<#
}
sr.Close();
#>
        }
    ),
<#
}
#>
};

//-----------------------------------------------------------------------------

} // namespace Localization
} // namespace SimCache
